//cyBOT_SERVRO_cal_t bot;
    //bot = cyBOT_SERVO_cal();
    //printf("%d, %d",bot.left, bot.right);
    //192.168.1.1
    //cpre288psk

//Cy-bot 00
//right_calibration_value = 269500;
//left_calibration_value = 1214500;
//Cy-bot 01
//right_calibration_value = 248500;
//left_calibration_value = 1235500;
//Cy-bot 15
//Right_calibration_value = 243250;
//left_calibration_value = 1256500;
//Cy-bot 05
//right_calibration_value = 301000;
//left_calibration_value = 1319500;
//cybot 06
//right_calibration_value = 274750;
//left_calibration_value = 1246000;
//cybot 03
//right_calibration_value = 274750;
//left_calibration_value = 1303750;


    /*cyBOT_init_Scan(0b0111);
    cyBOT_Scan_t scnr;
    cyBOT_Scan_t* pscnr = &scnr;
    right_calibration_value = 274750;
    left_calibration_value = 1303750;

    while(1) {
        cyBOT_Scan(90, pscnr);
        lcd_printf("%d", adc_read());
        timer_waitMillis(500);
    }*/
    
    //CLEAN DISTANCES
    /*for(i = 0; i < obj_arr[0].start_angle/2; i++) {
        distances[i] = 3.00;
        }
    for (i = 0; i < num_obj-1; i++) {
        for (j = ((obj_arr[i].end_angle/2) + 1); j < (obj_arr[i+1].start_angle/2); j++) {
            distances[j] = 3.00;
        }
    }
    for (i = ((obj_arr[num_obj].end_angle/2) + 1); i < 91 ;i++) {
        distances[i] = 3.00;
    }*/

    //ir_dist = (264092*pow(adc_read(), -1.301))/100;
            //ir_dist = (b * adc_read()) + a;
             /*b = ((float)((20 * sumXY) - (sumX * sumY)) / (float)((20 * sumX2) - (sumX * sumX)));
                a = ((sumY - (b * sumX)) / 20);*/

                //a0 = (sumY*(sumX2*sumX4-sumX3*sumX3)-sumX*(sumX*sumY*sumX4-sumX3*sumX2*sumY)+sumX2*(sumX*sumY*sumX3-sumX2*sumY*sumX2))/det; //det = 13*(sumX2*sumX4-sumX3*sumX3)-sumX*(sumX*sumX4-sumX2*sumX3)+sumX2*(sumX*sumX3-sumX2*sumX2); //float denominator = (20.0 * sumX2 * sumX4 + sumX * sumX * sumX4 + sumX2 * sumX2 * sumX2) - (sumX * sumX * sumX2 + 20.0 * sumX3 * sumX3 + sumX2 * sumX * sumX4);
                    sprintf(buffer, "%.10f\r\n\0", a0);
                    uart_sendStr(buffer);
                //a1 = (13*(sumX*sumY*sumX4-sumX3*sumX2*sumY)-sumY*(sumX*sumX4-sumX3*sumX2)+sumX2*(sumX*sumX2*sumY-sumX*sumY*sumX2))/det;
                    sprintf(buffer, "%.10f\r\n\0", a1);
                    uart_sendStr(buffer);
                //a2 = (m*(sumX2*sumX2*sumY-sumX*sumY*sumX3)-sumX*(sumX*sumX2*sumY-sumX*sumY*sumX2)+sumY*(sumX*sumX3-sumX2*sumX2))/det;
                    sprintf(buffer, "%.10f\r\n\0", a2);
                    uart_sendStr(buffer);



                    //sumX  += x[i]; sumY  += y[i]; sumXY += x[i] * y[i]; sumX2 += pow(x[i], 2);
                            //sumX3 += x[i]*x[i]*x[i]; sumX4 += pow(x[i], 4); sumX2Y += pow(x[i], 2) * y[i];
                            float x[m[0][0]], y[m[0][0]]/*, sumX = 0, sumY = 0, sumXY = 0, sumX2 = 0, sumX3 = 0, sumX4 = 0, sumX2Y = 0*/;

                            m[0][3] += y[i];
                                    m[1][3] += (x[i] * y[i]);
                                    m[2][3] += (y[i] * x[i] * x[i]);
                                    m[0][1] += x[i];                m[1][0] += x[i];
                                    m[0][2] += (x[i] * x[i]);         m[1][1] += (x[i] * x[i]);     m[2][0] += (x[i] * x[i]);

                                    m[1][2] += (x[i] * x[i] * x[i]);  m[2][1] +=  (x[i] * x[i] * x[i]);
                                    m[2][2] += (x[i] * x[i] * x[i] * x[i]);